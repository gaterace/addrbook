// Copyright 2020 Demian Harvill
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.21.0-devel
// 	protoc        v3.13.0
// source: MServiceAddrbook.proto

package mserviceaddrbook

import (
	reflect "reflect"
	sync "sync"

	dml "github.com/gaterace/dml-go/pkg/dml"
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// address book party type
type PartyType int32

const (
	// party type is unknown
	PartyType_UnknownParty PartyType = 0
	// party is a person
	PartyType_Person PartyType = 1
	// party is a business
	PartyType_Business PartyType = 2
)

// Enum value maps for PartyType.
var (
	PartyType_name = map[int32]string{
		0: "UnknownParty",
		1: "Person",
		2: "Business",
	}
	PartyType_value = map[string]int32{
		"UnknownParty": 0,
		"Person":       1,
		"Business":     2,
	}
)

func (x PartyType) Enum() *PartyType {
	p := new(PartyType)
	*p = x
	return p
}

func (x PartyType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PartyType) Descriptor() protoreflect.EnumDescriptor {
	return file_MServiceAddrbook_proto_enumTypes[0].Descriptor()
}

func (PartyType) Type() protoreflect.EnumType {
	return &file_MServiceAddrbook_proto_enumTypes[0]
}

func (x PartyType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PartyType.Descriptor instead.
func (PartyType) EnumDescriptor() ([]byte, []int) {
	return file_MServiceAddrbook_proto_rawDescGZIP(), []int{0}
}

// address book address type
type AddressType int32

const (
	// address type is unknown
	AddressType_UnknownAddress AddressType = 0
	// address is home address
	AddressType_Home AddressType = 1
	// address is shipping address
	AddressType_Shipping AddressType = 2
)

// Enum value maps for AddressType.
var (
	AddressType_name = map[int32]string{
		0: "UnknownAddress",
		1: "Home",
		2: "Shipping",
	}
	AddressType_value = map[string]int32{
		"UnknownAddress": 0,
		"Home":           1,
		"Shipping":       2,
	}
)

func (x AddressType) Enum() *AddressType {
	p := new(AddressType)
	*p = x
	return p
}

func (x AddressType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AddressType) Descriptor() protoreflect.EnumDescriptor {
	return file_MServiceAddrbook_proto_enumTypes[1].Descriptor()
}

func (AddressType) Type() protoreflect.EnumType {
	return &file_MServiceAddrbook_proto_enumTypes[1]
}

func (x AddressType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AddressType.Descriptor instead.
func (AddressType) EnumDescriptor() ([]byte, []int) {
	return file_MServiceAddrbook_proto_rawDescGZIP(), []int{1}
}

// address book phone type
type PhoneType int32

const (
	// phone type is unknown
	PhoneType_UnknownPhone PhoneType = 0
	// phone is home phone
	PhoneType_HomePhone PhoneType = 1
	// phone is work phone
	PhoneType_WorkPhone PhoneType = 2
	// phone is cell phone
	PhoneType_CellPhone PhoneType = 3
)

// Enum value maps for PhoneType.
var (
	PhoneType_name = map[int32]string{
		0: "UnknownPhone",
		1: "HomePhone",
		2: "WorkPhone",
		3: "CellPhone",
	}
	PhoneType_value = map[string]int32{
		"UnknownPhone": 0,
		"HomePhone":    1,
		"WorkPhone":    2,
		"CellPhone":    3,
	}
)

func (x PhoneType) Enum() *PhoneType {
	p := new(PhoneType)
	*p = x
	return p
}

func (x PhoneType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PhoneType) Descriptor() protoreflect.EnumDescriptor {
	return file_MServiceAddrbook_proto_enumTypes[2].Descriptor()
}

func (PhoneType) Type() protoreflect.EnumType {
	return &file_MServiceAddrbook_proto_enumTypes[2]
}

func (x PhoneType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PhoneType.Descriptor instead.
func (PhoneType) EnumDescriptor() ([]byte, []int) {
	return file_MServiceAddrbook_proto_rawDescGZIP(), []int{2}
}

// address book party entity
type Party struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// party identifier
	PartyId int64 `protobuf:"varint,1,opt,name=party_id,json=partyId,proto3" json:"party_id,omitempty"`
	// creation date
	Created *dml.DateTime `protobuf:"bytes,2,opt,name=created,proto3" json:"created,omitempty"`
	// modification date
	Modified *dml.DateTime `protobuf:"bytes,3,opt,name=modified,proto3" json:"modified,omitempty"`
	// deletion date
	Deleted *dml.DateTime `protobuf:"bytes,4,opt,name=deleted,proto3" json:"deleted,omitempty"`
	// has record been deleted?
	IsDeleted bool `protobuf:"varint,5,opt,name=is_deleted,json=isDeleted,proto3" json:"is_deleted,omitempty"`
	// version of this record
	Version int32 `protobuf:"varint,6,opt,name=version,proto3" json:"version,omitempty"`
	// mservice account identifier
	MserviceId int64 `protobuf:"varint,7,opt,name=mservice_id,json=mserviceId,proto3" json:"mservice_id,omitempty"`
	// type of party record, int value of PartyType
	PartyType int32 `protobuf:"varint,8,opt,name=party_type,json=partyType,proto3" json:"party_type,omitempty"`
	// string representation of party_type
	PartyTypeName string `protobuf:"bytes,9,opt,name=party_type_name,json=partyTypeName,proto3" json:"party_type_name,omitempty"`
	// party last name
	LastName string `protobuf:"bytes,10,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	// party middle name
	MiddleName string `protobuf:"bytes,11,opt,name=middle_name,json=middleName,proto3" json:"middle_name,omitempty"`
	// party first name
	FirstName string `protobuf:"bytes,12,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	// party nickname
	Nickname string `protobuf:"bytes,13,opt,name=nickname,proto3" json:"nickname,omitempty"`
	// party company
	Company string `protobuf:"bytes,14,opt,name=company,proto3" json:"company,omitempty"`
	// party email
	Email string `protobuf:"bytes,15,opt,name=email,proto3" json:"email,omitempty"`
}

func (x *Party) Reset() {
	*x = Party{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceAddrbook_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Party) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Party) ProtoMessage() {}

func (x *Party) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceAddrbook_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Party.ProtoReflect.Descriptor instead.
func (*Party) Descriptor() ([]byte, []int) {
	return file_MServiceAddrbook_proto_rawDescGZIP(), []int{0}
}

func (x *Party) GetPartyId() int64 {
	if x != nil {
		return x.PartyId
	}
	return 0
}

func (x *Party) GetCreated() *dml.DateTime {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *Party) GetModified() *dml.DateTime {
	if x != nil {
		return x.Modified
	}
	return nil
}

func (x *Party) GetDeleted() *dml.DateTime {
	if x != nil {
		return x.Deleted
	}
	return nil
}

func (x *Party) GetIsDeleted() bool {
	if x != nil {
		return x.IsDeleted
	}
	return false
}

func (x *Party) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *Party) GetMserviceId() int64 {
	if x != nil {
		return x.MserviceId
	}
	return 0
}

func (x *Party) GetPartyType() int32 {
	if x != nil {
		return x.PartyType
	}
	return 0
}

func (x *Party) GetPartyTypeName() string {
	if x != nil {
		return x.PartyTypeName
	}
	return ""
}

func (x *Party) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *Party) GetMiddleName() string {
	if x != nil {
		return x.MiddleName
	}
	return ""
}

func (x *Party) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *Party) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *Party) GetCompany() string {
	if x != nil {
		return x.Company
	}
	return ""
}

func (x *Party) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

// address book party entity wrapper
type PartyWrapper struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// party identifier
	PartyId int64 `protobuf:"varint,1,opt,name=party_id,json=partyId,proto3" json:"party_id,omitempty"`
	// creation date
	Created *dml.DateTime `protobuf:"bytes,2,opt,name=created,proto3" json:"created,omitempty"`
	// modification date
	Modified *dml.DateTime `protobuf:"bytes,3,opt,name=modified,proto3" json:"modified,omitempty"`
	// deletion date
	Deleted *dml.DateTime `protobuf:"bytes,4,opt,name=deleted,proto3" json:"deleted,omitempty"`
	// has record been deleted?
	IsDeleted bool `protobuf:"varint,5,opt,name=is_deleted,json=isDeleted,proto3" json:"is_deleted,omitempty"`
	// version of this record
	Version int32 `protobuf:"varint,6,opt,name=version,proto3" json:"version,omitempty"`
	// mservice account identifier
	MserviceId int64 `protobuf:"varint,7,opt,name=mservice_id,json=mserviceId,proto3" json:"mservice_id,omitempty"`
	// type of party record, int value of PartyType
	PartyType int32 `protobuf:"varint,8,opt,name=party_type,json=partyType,proto3" json:"party_type,omitempty"`
	// string representation of party_type
	PartyTypeName string `protobuf:"bytes,9,opt,name=party_type_name,json=partyTypeName,proto3" json:"party_type_name,omitempty"`
	// party last name
	LastName string `protobuf:"bytes,10,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	// party middle name
	MiddleName string `protobuf:"bytes,11,opt,name=middle_name,json=middleName,proto3" json:"middle_name,omitempty"`
	// party first name
	FirstName string `protobuf:"bytes,12,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	// party nickname
	Nickname string `protobuf:"bytes,13,opt,name=nickname,proto3" json:"nickname,omitempty"`
	// party company
	Company string `protobuf:"bytes,14,opt,name=company,proto3" json:"company,omitempty"`
	// party email
	Email string `protobuf:"bytes,15,opt,name=email,proto3" json:"email,omitempty"`
	// list address book address objects
	Addresses []*Address `protobuf:"bytes,16,rep,name=addresses,proto3" json:"addresses,omitempty"`
	// list address book phone objects
	Phones []*Phone `protobuf:"bytes,17,rep,name=phones,proto3" json:"phones,omitempty"`
}

func (x *PartyWrapper) Reset() {
	*x = PartyWrapper{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceAddrbook_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PartyWrapper) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PartyWrapper) ProtoMessage() {}

func (x *PartyWrapper) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceAddrbook_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PartyWrapper.ProtoReflect.Descriptor instead.
func (*PartyWrapper) Descriptor() ([]byte, []int) {
	return file_MServiceAddrbook_proto_rawDescGZIP(), []int{1}
}

func (x *PartyWrapper) GetPartyId() int64 {
	if x != nil {
		return x.PartyId
	}
	return 0
}

func (x *PartyWrapper) GetCreated() *dml.DateTime {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *PartyWrapper) GetModified() *dml.DateTime {
	if x != nil {
		return x.Modified
	}
	return nil
}

func (x *PartyWrapper) GetDeleted() *dml.DateTime {
	if x != nil {
		return x.Deleted
	}
	return nil
}

func (x *PartyWrapper) GetIsDeleted() bool {
	if x != nil {
		return x.IsDeleted
	}
	return false
}

func (x *PartyWrapper) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *PartyWrapper) GetMserviceId() int64 {
	if x != nil {
		return x.MserviceId
	}
	return 0
}

func (x *PartyWrapper) GetPartyType() int32 {
	if x != nil {
		return x.PartyType
	}
	return 0
}

func (x *PartyWrapper) GetPartyTypeName() string {
	if x != nil {
		return x.PartyTypeName
	}
	return ""
}

func (x *PartyWrapper) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *PartyWrapper) GetMiddleName() string {
	if x != nil {
		return x.MiddleName
	}
	return ""
}

func (x *PartyWrapper) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *PartyWrapper) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *PartyWrapper) GetCompany() string {
	if x != nil {
		return x.Company
	}
	return ""
}

func (x *PartyWrapper) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *PartyWrapper) GetAddresses() []*Address {
	if x != nil {
		return x.Addresses
	}
	return nil
}

func (x *PartyWrapper) GetPhones() []*Phone {
	if x != nil {
		return x.Phones
	}
	return nil
}

// address book address entity
type Address struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// party identifier
	PartyId int64 `protobuf:"varint,1,opt,name=party_id,json=partyId,proto3" json:"party_id,omitempty"`
	// type of address record, int value of AddressType
	AddressType int32 `protobuf:"varint,2,opt,name=address_type,json=addressType,proto3" json:"address_type,omitempty"`
	// creation date
	Created *dml.DateTime `protobuf:"bytes,3,opt,name=created,proto3" json:"created,omitempty"`
	// modification date
	Modified *dml.DateTime `protobuf:"bytes,4,opt,name=modified,proto3" json:"modified,omitempty"`
	// deletion date
	Deleted *dml.DateTime `protobuf:"bytes,5,opt,name=deleted,proto3" json:"deleted,omitempty"`
	// has record been deleted?
	IsDeleted bool `protobuf:"varint,6,opt,name=is_deleted,json=isDeleted,proto3" json:"is_deleted,omitempty"`
	// version of this record
	Version int32 `protobuf:"varint,7,opt,name=version,proto3" json:"version,omitempty"`
	// string representation of address_type
	AddressTypeName string `protobuf:"bytes,8,opt,name=address_type_name,json=addressTypeName,proto3" json:"address_type_name,omitempty"`
	// mservice account identifier
	MserviceId int64 `protobuf:"varint,9,opt,name=mservice_id,json=mserviceId,proto3" json:"mservice_id,omitempty"`
	// postal address line 1
	Address_1 string `protobuf:"bytes,10,opt,name=address_1,json=address1,proto3" json:"address_1,omitempty"`
	// postal address line 2
	Address_2 string `protobuf:"bytes,11,opt,name=address_2,json=address2,proto3" json:"address_2,omitempty"`
	// postal city
	City string `protobuf:"bytes,12,opt,name=city,proto3" json:"city,omitempty"`
	// postal state
	State string `protobuf:"bytes,13,opt,name=state,proto3" json:"state,omitempty"`
	// postal code
	PostalCode string `protobuf:"bytes,14,opt,name=postal_code,json=postalCode,proto3" json:"postal_code,omitempty"`
	// country code
	CountryCode string `protobuf:"bytes,15,opt,name=country_code,json=countryCode,proto3" json:"country_code,omitempty"`
}

func (x *Address) Reset() {
	*x = Address{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceAddrbook_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Address) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Address) ProtoMessage() {}

func (x *Address) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceAddrbook_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Address.ProtoReflect.Descriptor instead.
func (*Address) Descriptor() ([]byte, []int) {
	return file_MServiceAddrbook_proto_rawDescGZIP(), []int{2}
}

func (x *Address) GetPartyId() int64 {
	if x != nil {
		return x.PartyId
	}
	return 0
}

func (x *Address) GetAddressType() int32 {
	if x != nil {
		return x.AddressType
	}
	return 0
}

func (x *Address) GetCreated() *dml.DateTime {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *Address) GetModified() *dml.DateTime {
	if x != nil {
		return x.Modified
	}
	return nil
}

func (x *Address) GetDeleted() *dml.DateTime {
	if x != nil {
		return x.Deleted
	}
	return nil
}

func (x *Address) GetIsDeleted() bool {
	if x != nil {
		return x.IsDeleted
	}
	return false
}

func (x *Address) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *Address) GetAddressTypeName() string {
	if x != nil {
		return x.AddressTypeName
	}
	return ""
}

func (x *Address) GetMserviceId() int64 {
	if x != nil {
		return x.MserviceId
	}
	return 0
}

func (x *Address) GetAddress_1() string {
	if x != nil {
		return x.Address_1
	}
	return ""
}

func (x *Address) GetAddress_2() string {
	if x != nil {
		return x.Address_2
	}
	return ""
}

func (x *Address) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *Address) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *Address) GetPostalCode() string {
	if x != nil {
		return x.PostalCode
	}
	return ""
}

func (x *Address) GetCountryCode() string {
	if x != nil {
		return x.CountryCode
	}
	return ""
}

// address book phone entity
type Phone struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// party identifier
	PartyId int64 `protobuf:"varint,1,opt,name=party_id,json=partyId,proto3" json:"party_id,omitempty"`
	// type of phone record, int value of PhoneType
	PhoneType int32 `protobuf:"varint,2,opt,name=phone_type,json=phoneType,proto3" json:"phone_type,omitempty"`
	// creation date
	Created *dml.DateTime `protobuf:"bytes,3,opt,name=created,proto3" json:"created,omitempty"`
	// modification date
	Modified *dml.DateTime `protobuf:"bytes,4,opt,name=modified,proto3" json:"modified,omitempty"`
	// deletion date
	Deleted *dml.DateTime `protobuf:"bytes,5,opt,name=deleted,proto3" json:"deleted,omitempty"`
	// has record been deleted?
	IsDeleted bool `protobuf:"varint,6,opt,name=is_deleted,json=isDeleted,proto3" json:"is_deleted,omitempty"`
	// version of this record
	Version int32 `protobuf:"varint,7,opt,name=version,proto3" json:"version,omitempty"`
	// string representation of phone_type
	PhoneTypeName string `protobuf:"bytes,8,opt,name=phone_type_name,json=phoneTypeName,proto3" json:"phone_type_name,omitempty"`
	// mservice account identifier
	MserviceId int64 `protobuf:"varint,9,opt,name=mservice_id,json=mserviceId,proto3" json:"mservice_id,omitempty"`
	// phone number
	PhoneNumber string `protobuf:"bytes,10,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
}

func (x *Phone) Reset() {
	*x = Phone{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceAddrbook_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Phone) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Phone) ProtoMessage() {}

func (x *Phone) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceAddrbook_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Phone.ProtoReflect.Descriptor instead.
func (*Phone) Descriptor() ([]byte, []int) {
	return file_MServiceAddrbook_proto_rawDescGZIP(), []int{3}
}

func (x *Phone) GetPartyId() int64 {
	if x != nil {
		return x.PartyId
	}
	return 0
}

func (x *Phone) GetPhoneType() int32 {
	if x != nil {
		return x.PhoneType
	}
	return 0
}

func (x *Phone) GetCreated() *dml.DateTime {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *Phone) GetModified() *dml.DateTime {
	if x != nil {
		return x.Modified
	}
	return nil
}

func (x *Phone) GetDeleted() *dml.DateTime {
	if x != nil {
		return x.Deleted
	}
	return nil
}

func (x *Phone) GetIsDeleted() bool {
	if x != nil {
		return x.IsDeleted
	}
	return false
}

func (x *Phone) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *Phone) GetPhoneTypeName() string {
	if x != nil {
		return x.PhoneTypeName
	}
	return ""
}

func (x *Phone) GetMserviceId() int64 {
	if x != nil {
		return x.MserviceId
	}
	return 0
}

func (x *Phone) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

// request parameters for method create_party
type CreatePartyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// mservice account identifier
	MserviceId int64 `protobuf:"varint,1,opt,name=mservice_id,json=mserviceId,proto3" json:"mservice_id,omitempty"`
	// type of party record, int value of PartyType
	PartyType int32 `protobuf:"varint,2,opt,name=party_type,json=partyType,proto3" json:"party_type,omitempty"`
	// party last name
	LastName string `protobuf:"bytes,3,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	// party middle name
	MiddleName string `protobuf:"bytes,4,opt,name=middle_name,json=middleName,proto3" json:"middle_name,omitempty"`
	// party first name
	FirstName string `protobuf:"bytes,5,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	// party nickname
	Nickname string `protobuf:"bytes,6,opt,name=nickname,proto3" json:"nickname,omitempty"`
	// party company
	Company string `protobuf:"bytes,7,opt,name=company,proto3" json:"company,omitempty"`
	// party email
	Email string `protobuf:"bytes,8,opt,name=email,proto3" json:"email,omitempty"`
}

func (x *CreatePartyRequest) Reset() {
	*x = CreatePartyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceAddrbook_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePartyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePartyRequest) ProtoMessage() {}

func (x *CreatePartyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceAddrbook_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePartyRequest.ProtoReflect.Descriptor instead.
func (*CreatePartyRequest) Descriptor() ([]byte, []int) {
	return file_MServiceAddrbook_proto_rawDescGZIP(), []int{4}
}

func (x *CreatePartyRequest) GetMserviceId() int64 {
	if x != nil {
		return x.MserviceId
	}
	return 0
}

func (x *CreatePartyRequest) GetPartyType() int32 {
	if x != nil {
		return x.PartyType
	}
	return 0
}

func (x *CreatePartyRequest) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *CreatePartyRequest) GetMiddleName() string {
	if x != nil {
		return x.MiddleName
	}
	return ""
}

func (x *CreatePartyRequest) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *CreatePartyRequest) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *CreatePartyRequest) GetCompany() string {
	if x != nil {
		return x.Company
	}
	return ""
}

func (x *CreatePartyRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

// response parameters for method create_party
type CreatePartyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// method result code
	ErrorCode int32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	// text error message
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// version of this record
	Version int32 `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	// party identifier
	PartyId int64 `protobuf:"varint,4,opt,name=party_id,json=partyId,proto3" json:"party_id,omitempty"`
}

func (x *CreatePartyResponse) Reset() {
	*x = CreatePartyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceAddrbook_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePartyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePartyResponse) ProtoMessage() {}

func (x *CreatePartyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceAddrbook_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePartyResponse.ProtoReflect.Descriptor instead.
func (*CreatePartyResponse) Descriptor() ([]byte, []int) {
	return file_MServiceAddrbook_proto_rawDescGZIP(), []int{5}
}

func (x *CreatePartyResponse) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *CreatePartyResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *CreatePartyResponse) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *CreatePartyResponse) GetPartyId() int64 {
	if x != nil {
		return x.PartyId
	}
	return 0
}

// request parameters for method update_party
type UpdatePartyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// mservice account identifier
	MserviceId int64 `protobuf:"varint,1,opt,name=mservice_id,json=mserviceId,proto3" json:"mservice_id,omitempty"`
	// party identifier
	PartyId int64 `protobuf:"varint,2,opt,name=party_id,json=partyId,proto3" json:"party_id,omitempty"`
	// version of this record
	Version int32 `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	// type of party record, int value of PartyType
	PartyType int32 `protobuf:"varint,4,opt,name=party_type,json=partyType,proto3" json:"party_type,omitempty"`
	// party last name
	LastName string `protobuf:"bytes,5,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	// party middle name
	MiddleName string `protobuf:"bytes,6,opt,name=middle_name,json=middleName,proto3" json:"middle_name,omitempty"`
	// party first name
	FirstName string `protobuf:"bytes,7,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	// party nickname
	Nickname string `protobuf:"bytes,8,opt,name=nickname,proto3" json:"nickname,omitempty"`
	// party company
	Company string `protobuf:"bytes,9,opt,name=company,proto3" json:"company,omitempty"`
	// party email
	Email string `protobuf:"bytes,10,opt,name=email,proto3" json:"email,omitempty"`
}

func (x *UpdatePartyRequest) Reset() {
	*x = UpdatePartyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceAddrbook_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePartyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePartyRequest) ProtoMessage() {}

func (x *UpdatePartyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceAddrbook_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePartyRequest.ProtoReflect.Descriptor instead.
func (*UpdatePartyRequest) Descriptor() ([]byte, []int) {
	return file_MServiceAddrbook_proto_rawDescGZIP(), []int{6}
}

func (x *UpdatePartyRequest) GetMserviceId() int64 {
	if x != nil {
		return x.MserviceId
	}
	return 0
}

func (x *UpdatePartyRequest) GetPartyId() int64 {
	if x != nil {
		return x.PartyId
	}
	return 0
}

func (x *UpdatePartyRequest) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *UpdatePartyRequest) GetPartyType() int32 {
	if x != nil {
		return x.PartyType
	}
	return 0
}

func (x *UpdatePartyRequest) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *UpdatePartyRequest) GetMiddleName() string {
	if x != nil {
		return x.MiddleName
	}
	return ""
}

func (x *UpdatePartyRequest) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *UpdatePartyRequest) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *UpdatePartyRequest) GetCompany() string {
	if x != nil {
		return x.Company
	}
	return ""
}

func (x *UpdatePartyRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

// response parameters for method update_party
type UpdatePartyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// method result code
	ErrorCode int32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	// text error message
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// version of this record
	Version int32 `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *UpdatePartyResponse) Reset() {
	*x = UpdatePartyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceAddrbook_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePartyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePartyResponse) ProtoMessage() {}

func (x *UpdatePartyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceAddrbook_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePartyResponse.ProtoReflect.Descriptor instead.
func (*UpdatePartyResponse) Descriptor() ([]byte, []int) {
	return file_MServiceAddrbook_proto_rawDescGZIP(), []int{7}
}

func (x *UpdatePartyResponse) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *UpdatePartyResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *UpdatePartyResponse) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

// request parameters for method delete_party
type DeletePartyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// mservice account identifier
	MserviceId int64 `protobuf:"varint,1,opt,name=mservice_id,json=mserviceId,proto3" json:"mservice_id,omitempty"`
	// party identifier
	PartyId int64 `protobuf:"varint,2,opt,name=party_id,json=partyId,proto3" json:"party_id,omitempty"`
	// version of this record
	Version int32 `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *DeletePartyRequest) Reset() {
	*x = DeletePartyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceAddrbook_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletePartyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePartyRequest) ProtoMessage() {}

func (x *DeletePartyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceAddrbook_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePartyRequest.ProtoReflect.Descriptor instead.
func (*DeletePartyRequest) Descriptor() ([]byte, []int) {
	return file_MServiceAddrbook_proto_rawDescGZIP(), []int{8}
}

func (x *DeletePartyRequest) GetMserviceId() int64 {
	if x != nil {
		return x.MserviceId
	}
	return 0
}

func (x *DeletePartyRequest) GetPartyId() int64 {
	if x != nil {
		return x.PartyId
	}
	return 0
}

func (x *DeletePartyRequest) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

// response parameters for method delete_party
type DeletePartyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// method result code
	ErrorCode int32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	// text error message
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// version of this record
	Version int32 `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *DeletePartyResponse) Reset() {
	*x = DeletePartyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceAddrbook_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletePartyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePartyResponse) ProtoMessage() {}

func (x *DeletePartyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceAddrbook_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePartyResponse.ProtoReflect.Descriptor instead.
func (*DeletePartyResponse) Descriptor() ([]byte, []int) {
	return file_MServiceAddrbook_proto_rawDescGZIP(), []int{9}
}

func (x *DeletePartyResponse) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *DeletePartyResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *DeletePartyResponse) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

// request parameters for method get_party
type GetPartyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// mservice account identifier
	MserviceId int64 `protobuf:"varint,1,opt,name=mservice_id,json=mserviceId,proto3" json:"mservice_id,omitempty"`
	// party identifier
	PartyId int64 `protobuf:"varint,2,opt,name=party_id,json=partyId,proto3" json:"party_id,omitempty"`
}

func (x *GetPartyRequest) Reset() {
	*x = GetPartyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceAddrbook_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPartyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPartyRequest) ProtoMessage() {}

func (x *GetPartyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceAddrbook_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPartyRequest.ProtoReflect.Descriptor instead.
func (*GetPartyRequest) Descriptor() ([]byte, []int) {
	return file_MServiceAddrbook_proto_rawDescGZIP(), []int{10}
}

func (x *GetPartyRequest) GetMserviceId() int64 {
	if x != nil {
		return x.MserviceId
	}
	return 0
}

func (x *GetPartyRequest) GetPartyId() int64 {
	if x != nil {
		return x.PartyId
	}
	return 0
}

// response parameters for method get_party
type GetPartyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// method result code
	ErrorCode int32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	// text error message
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// address book party object
	Party *Party `protobuf:"bytes,3,opt,name=party,proto3" json:"party,omitempty"`
}

func (x *GetPartyResponse) Reset() {
	*x = GetPartyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceAddrbook_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPartyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPartyResponse) ProtoMessage() {}

func (x *GetPartyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceAddrbook_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPartyResponse.ProtoReflect.Descriptor instead.
func (*GetPartyResponse) Descriptor() ([]byte, []int) {
	return file_MServiceAddrbook_proto_rawDescGZIP(), []int{11}
}

func (x *GetPartyResponse) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *GetPartyResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *GetPartyResponse) GetParty() *Party {
	if x != nil {
		return x.Party
	}
	return nil
}

// request parameters for method get_parties
type GetPartiesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// mservice account identifier
	MserviceId int64 `protobuf:"varint,1,opt,name=mservice_id,json=mserviceId,proto3" json:"mservice_id,omitempty"`
}

func (x *GetPartiesRequest) Reset() {
	*x = GetPartiesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceAddrbook_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPartiesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPartiesRequest) ProtoMessage() {}

func (x *GetPartiesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceAddrbook_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPartiesRequest.ProtoReflect.Descriptor instead.
func (*GetPartiesRequest) Descriptor() ([]byte, []int) {
	return file_MServiceAddrbook_proto_rawDescGZIP(), []int{12}
}

func (x *GetPartiesRequest) GetMserviceId() int64 {
	if x != nil {
		return x.MserviceId
	}
	return 0
}

// response parameters for method get_parties
type GetPartiesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// method result code
	ErrorCode int32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	// text error message
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// list address book party objects
	Parties []*Party `protobuf:"bytes,3,rep,name=parties,proto3" json:"parties,omitempty"`
}

func (x *GetPartiesResponse) Reset() {
	*x = GetPartiesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceAddrbook_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPartiesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPartiesResponse) ProtoMessage() {}

func (x *GetPartiesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceAddrbook_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPartiesResponse.ProtoReflect.Descriptor instead.
func (*GetPartiesResponse) Descriptor() ([]byte, []int) {
	return file_MServiceAddrbook_proto_rawDescGZIP(), []int{13}
}

func (x *GetPartiesResponse) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *GetPartiesResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *GetPartiesResponse) GetParties() []*Party {
	if x != nil {
		return x.Parties
	}
	return nil
}

// request parameters for method get_party_wrapper
type GetPartyWrapperRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// mservice account identifier
	MserviceId int64 `protobuf:"varint,1,opt,name=mservice_id,json=mserviceId,proto3" json:"mservice_id,omitempty"`
	// party identifier
	PartyId int64 `protobuf:"varint,2,opt,name=party_id,json=partyId,proto3" json:"party_id,omitempty"`
}

func (x *GetPartyWrapperRequest) Reset() {
	*x = GetPartyWrapperRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceAddrbook_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPartyWrapperRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPartyWrapperRequest) ProtoMessage() {}

func (x *GetPartyWrapperRequest) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceAddrbook_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPartyWrapperRequest.ProtoReflect.Descriptor instead.
func (*GetPartyWrapperRequest) Descriptor() ([]byte, []int) {
	return file_MServiceAddrbook_proto_rawDescGZIP(), []int{14}
}

func (x *GetPartyWrapperRequest) GetMserviceId() int64 {
	if x != nil {
		return x.MserviceId
	}
	return 0
}

func (x *GetPartyWrapperRequest) GetPartyId() int64 {
	if x != nil {
		return x.PartyId
	}
	return 0
}

// response parameters for method get_party_wrapper
type GetPartyWrapperResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// method result code
	ErrorCode int32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	// text error message
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// address book party wrapper object
	PartyWrapper *PartyWrapper `protobuf:"bytes,3,opt,name=party_wrapper,json=partyWrapper,proto3" json:"party_wrapper,omitempty"`
}

func (x *GetPartyWrapperResponse) Reset() {
	*x = GetPartyWrapperResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceAddrbook_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPartyWrapperResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPartyWrapperResponse) ProtoMessage() {}

func (x *GetPartyWrapperResponse) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceAddrbook_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPartyWrapperResponse.ProtoReflect.Descriptor instead.
func (*GetPartyWrapperResponse) Descriptor() ([]byte, []int) {
	return file_MServiceAddrbook_proto_rawDescGZIP(), []int{15}
}

func (x *GetPartyWrapperResponse) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *GetPartyWrapperResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *GetPartyWrapperResponse) GetPartyWrapper() *PartyWrapper {
	if x != nil {
		return x.PartyWrapper
	}
	return nil
}

// request parameters for method create_address
type CreateAddressRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// mservice account identifier
	MserviceId int64 `protobuf:"varint,1,opt,name=mservice_id,json=mserviceId,proto3" json:"mservice_id,omitempty"`
	// party identifier
	PartyId int64 `protobuf:"varint,2,opt,name=party_id,json=partyId,proto3" json:"party_id,omitempty"`
	// type of address record, int value of AddressType
	AddressType int32 `protobuf:"varint,3,opt,name=address_type,json=addressType,proto3" json:"address_type,omitempty"`
	// postal address line 1
	Address_1 string `protobuf:"bytes,4,opt,name=address_1,json=address1,proto3" json:"address_1,omitempty"`
	// postal address line 2
	Address_2 string `protobuf:"bytes,5,opt,name=address_2,json=address2,proto3" json:"address_2,omitempty"`
	// postal city
	City string `protobuf:"bytes,6,opt,name=city,proto3" json:"city,omitempty"`
	// postal state
	State string `protobuf:"bytes,7,opt,name=state,proto3" json:"state,omitempty"`
	// postal code
	PostalCode string `protobuf:"bytes,8,opt,name=postal_code,json=postalCode,proto3" json:"postal_code,omitempty"`
	// country code
	CountryCode string `protobuf:"bytes,9,opt,name=country_code,json=countryCode,proto3" json:"country_code,omitempty"`
}

func (x *CreateAddressRequest) Reset() {
	*x = CreateAddressRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceAddrbook_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAddressRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAddressRequest) ProtoMessage() {}

func (x *CreateAddressRequest) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceAddrbook_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAddressRequest.ProtoReflect.Descriptor instead.
func (*CreateAddressRequest) Descriptor() ([]byte, []int) {
	return file_MServiceAddrbook_proto_rawDescGZIP(), []int{16}
}

func (x *CreateAddressRequest) GetMserviceId() int64 {
	if x != nil {
		return x.MserviceId
	}
	return 0
}

func (x *CreateAddressRequest) GetPartyId() int64 {
	if x != nil {
		return x.PartyId
	}
	return 0
}

func (x *CreateAddressRequest) GetAddressType() int32 {
	if x != nil {
		return x.AddressType
	}
	return 0
}

func (x *CreateAddressRequest) GetAddress_1() string {
	if x != nil {
		return x.Address_1
	}
	return ""
}

func (x *CreateAddressRequest) GetAddress_2() string {
	if x != nil {
		return x.Address_2
	}
	return ""
}

func (x *CreateAddressRequest) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *CreateAddressRequest) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *CreateAddressRequest) GetPostalCode() string {
	if x != nil {
		return x.PostalCode
	}
	return ""
}

func (x *CreateAddressRequest) GetCountryCode() string {
	if x != nil {
		return x.CountryCode
	}
	return ""
}

// response parameters for method create_address
type CreateAddressResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// method result code
	ErrorCode int32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	// text error message
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// version of this record
	Version int32 `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *CreateAddressResponse) Reset() {
	*x = CreateAddressResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceAddrbook_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAddressResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAddressResponse) ProtoMessage() {}

func (x *CreateAddressResponse) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceAddrbook_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAddressResponse.ProtoReflect.Descriptor instead.
func (*CreateAddressResponse) Descriptor() ([]byte, []int) {
	return file_MServiceAddrbook_proto_rawDescGZIP(), []int{17}
}

func (x *CreateAddressResponse) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *CreateAddressResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *CreateAddressResponse) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

// request parameters for method update_address
type UpdateAddressRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// mservice account identifier
	MserviceId int64 `protobuf:"varint,1,opt,name=mservice_id,json=mserviceId,proto3" json:"mservice_id,omitempty"`
	// party identifier
	PartyId int64 `protobuf:"varint,2,opt,name=party_id,json=partyId,proto3" json:"party_id,omitempty"`
	// type of address record, int value of AddressType
	AddressType int32 `protobuf:"varint,3,opt,name=address_type,json=addressType,proto3" json:"address_type,omitempty"`
	// version of this record
	Version int32 `protobuf:"varint,4,opt,name=version,proto3" json:"version,omitempty"`
	// postal address line 1
	Address_1 string `protobuf:"bytes,5,opt,name=address_1,json=address1,proto3" json:"address_1,omitempty"`
	// postal address line 2
	Address_2 string `protobuf:"bytes,6,opt,name=address_2,json=address2,proto3" json:"address_2,omitempty"`
	// postal city
	City string `protobuf:"bytes,7,opt,name=city,proto3" json:"city,omitempty"`
	// postal state
	State string `protobuf:"bytes,8,opt,name=state,proto3" json:"state,omitempty"`
	// postal code
	PostalCode string `protobuf:"bytes,9,opt,name=postal_code,json=postalCode,proto3" json:"postal_code,omitempty"`
	// country code
	CountryCode string `protobuf:"bytes,10,opt,name=country_code,json=countryCode,proto3" json:"country_code,omitempty"`
}

func (x *UpdateAddressRequest) Reset() {
	*x = UpdateAddressRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceAddrbook_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAddressRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAddressRequest) ProtoMessage() {}

func (x *UpdateAddressRequest) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceAddrbook_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAddressRequest.ProtoReflect.Descriptor instead.
func (*UpdateAddressRequest) Descriptor() ([]byte, []int) {
	return file_MServiceAddrbook_proto_rawDescGZIP(), []int{18}
}

func (x *UpdateAddressRequest) GetMserviceId() int64 {
	if x != nil {
		return x.MserviceId
	}
	return 0
}

func (x *UpdateAddressRequest) GetPartyId() int64 {
	if x != nil {
		return x.PartyId
	}
	return 0
}

func (x *UpdateAddressRequest) GetAddressType() int32 {
	if x != nil {
		return x.AddressType
	}
	return 0
}

func (x *UpdateAddressRequest) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *UpdateAddressRequest) GetAddress_1() string {
	if x != nil {
		return x.Address_1
	}
	return ""
}

func (x *UpdateAddressRequest) GetAddress_2() string {
	if x != nil {
		return x.Address_2
	}
	return ""
}

func (x *UpdateAddressRequest) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *UpdateAddressRequest) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *UpdateAddressRequest) GetPostalCode() string {
	if x != nil {
		return x.PostalCode
	}
	return ""
}

func (x *UpdateAddressRequest) GetCountryCode() string {
	if x != nil {
		return x.CountryCode
	}
	return ""
}

// response parameters for method update_address
type UpdateAddressResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// method result code
	ErrorCode int32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	// text error message
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// version of this record
	Version int32 `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *UpdateAddressResponse) Reset() {
	*x = UpdateAddressResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceAddrbook_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAddressResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAddressResponse) ProtoMessage() {}

func (x *UpdateAddressResponse) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceAddrbook_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAddressResponse.ProtoReflect.Descriptor instead.
func (*UpdateAddressResponse) Descriptor() ([]byte, []int) {
	return file_MServiceAddrbook_proto_rawDescGZIP(), []int{19}
}

func (x *UpdateAddressResponse) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *UpdateAddressResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *UpdateAddressResponse) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

// request parameters for method delete_address
type DeleteAddressRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// mservice account identifier
	MserviceId int64 `protobuf:"varint,1,opt,name=mservice_id,json=mserviceId,proto3" json:"mservice_id,omitempty"`
	// party identifier
	PartyId int64 `protobuf:"varint,2,opt,name=party_id,json=partyId,proto3" json:"party_id,omitempty"`
	// type of address record, int value of AddressType
	AddressType int32 `protobuf:"varint,3,opt,name=address_type,json=addressType,proto3" json:"address_type,omitempty"`
	// version of this record
	Version int32 `protobuf:"varint,4,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *DeleteAddressRequest) Reset() {
	*x = DeleteAddressRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceAddrbook_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAddressRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAddressRequest) ProtoMessage() {}

func (x *DeleteAddressRequest) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceAddrbook_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAddressRequest.ProtoReflect.Descriptor instead.
func (*DeleteAddressRequest) Descriptor() ([]byte, []int) {
	return file_MServiceAddrbook_proto_rawDescGZIP(), []int{20}
}

func (x *DeleteAddressRequest) GetMserviceId() int64 {
	if x != nil {
		return x.MserviceId
	}
	return 0
}

func (x *DeleteAddressRequest) GetPartyId() int64 {
	if x != nil {
		return x.PartyId
	}
	return 0
}

func (x *DeleteAddressRequest) GetAddressType() int32 {
	if x != nil {
		return x.AddressType
	}
	return 0
}

func (x *DeleteAddressRequest) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

// response parameters for method delete_address
type DeleteAddressResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// method result code
	ErrorCode int32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	// text error message
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// version of this record
	Version int32 `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *DeleteAddressResponse) Reset() {
	*x = DeleteAddressResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceAddrbook_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAddressResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAddressResponse) ProtoMessage() {}

func (x *DeleteAddressResponse) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceAddrbook_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAddressResponse.ProtoReflect.Descriptor instead.
func (*DeleteAddressResponse) Descriptor() ([]byte, []int) {
	return file_MServiceAddrbook_proto_rawDescGZIP(), []int{21}
}

func (x *DeleteAddressResponse) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *DeleteAddressResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *DeleteAddressResponse) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

// request parameters for method get_address
type GetAddressRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// mservice account identifier
	MserviceId int64 `protobuf:"varint,1,opt,name=mservice_id,json=mserviceId,proto3" json:"mservice_id,omitempty"`
	// party identifier
	PartyId int64 `protobuf:"varint,2,opt,name=party_id,json=partyId,proto3" json:"party_id,omitempty"`
	// type of address record, int value of AddressType
	AddressType int32 `protobuf:"varint,3,opt,name=address_type,json=addressType,proto3" json:"address_type,omitempty"`
}

func (x *GetAddressRequest) Reset() {
	*x = GetAddressRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceAddrbook_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAddressRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAddressRequest) ProtoMessage() {}

func (x *GetAddressRequest) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceAddrbook_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAddressRequest.ProtoReflect.Descriptor instead.
func (*GetAddressRequest) Descriptor() ([]byte, []int) {
	return file_MServiceAddrbook_proto_rawDescGZIP(), []int{22}
}

func (x *GetAddressRequest) GetMserviceId() int64 {
	if x != nil {
		return x.MserviceId
	}
	return 0
}

func (x *GetAddressRequest) GetPartyId() int64 {
	if x != nil {
		return x.PartyId
	}
	return 0
}

func (x *GetAddressRequest) GetAddressType() int32 {
	if x != nil {
		return x.AddressType
	}
	return 0
}

// response parameters for method get_address
type GetAddressResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// method result code
	ErrorCode int32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	// text error message
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// address book address object
	Address *Address `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *GetAddressResponse) Reset() {
	*x = GetAddressResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceAddrbook_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAddressResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAddressResponse) ProtoMessage() {}

func (x *GetAddressResponse) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceAddrbook_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAddressResponse.ProtoReflect.Descriptor instead.
func (*GetAddressResponse) Descriptor() ([]byte, []int) {
	return file_MServiceAddrbook_proto_rawDescGZIP(), []int{23}
}

func (x *GetAddressResponse) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *GetAddressResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *GetAddressResponse) GetAddress() *Address {
	if x != nil {
		return x.Address
	}
	return nil
}

// request parameters for method create_phone
type CreatePhoneRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// mservice account identifier
	MserviceId int64 `protobuf:"varint,1,opt,name=mservice_id,json=mserviceId,proto3" json:"mservice_id,omitempty"`
	// party identifier
	PartyId int64 `protobuf:"varint,2,opt,name=party_id,json=partyId,proto3" json:"party_id,omitempty"`
	// type of phone record, int value of PhoneType
	PhoneType int32 `protobuf:"varint,3,opt,name=phone_type,json=phoneType,proto3" json:"phone_type,omitempty"`
	// phone number
	PhoneNumber string `protobuf:"bytes,4,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
}

func (x *CreatePhoneRequest) Reset() {
	*x = CreatePhoneRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceAddrbook_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePhoneRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePhoneRequest) ProtoMessage() {}

func (x *CreatePhoneRequest) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceAddrbook_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePhoneRequest.ProtoReflect.Descriptor instead.
func (*CreatePhoneRequest) Descriptor() ([]byte, []int) {
	return file_MServiceAddrbook_proto_rawDescGZIP(), []int{24}
}

func (x *CreatePhoneRequest) GetMserviceId() int64 {
	if x != nil {
		return x.MserviceId
	}
	return 0
}

func (x *CreatePhoneRequest) GetPartyId() int64 {
	if x != nil {
		return x.PartyId
	}
	return 0
}

func (x *CreatePhoneRequest) GetPhoneType() int32 {
	if x != nil {
		return x.PhoneType
	}
	return 0
}

func (x *CreatePhoneRequest) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

// response parameters for method create_phone
type CreatePhoneResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// method result code
	ErrorCode int32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	// text error message
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// version of this record
	Version int32 `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *CreatePhoneResponse) Reset() {
	*x = CreatePhoneResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceAddrbook_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePhoneResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePhoneResponse) ProtoMessage() {}

func (x *CreatePhoneResponse) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceAddrbook_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePhoneResponse.ProtoReflect.Descriptor instead.
func (*CreatePhoneResponse) Descriptor() ([]byte, []int) {
	return file_MServiceAddrbook_proto_rawDescGZIP(), []int{25}
}

func (x *CreatePhoneResponse) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *CreatePhoneResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *CreatePhoneResponse) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

// request parameters for method update_phone
type UpdatePhoneRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// mservice account identifier
	MserviceId int64 `protobuf:"varint,1,opt,name=mservice_id,json=mserviceId,proto3" json:"mservice_id,omitempty"`
	// party identifier
	PartyId int64 `protobuf:"varint,2,opt,name=party_id,json=partyId,proto3" json:"party_id,omitempty"`
	// type of phone record, int value of PhoneType
	PhoneType int32 `protobuf:"varint,3,opt,name=phone_type,json=phoneType,proto3" json:"phone_type,omitempty"`
	// version of this record
	Version int32 `protobuf:"varint,4,opt,name=version,proto3" json:"version,omitempty"`
	// phone number
	PhoneNumber string `protobuf:"bytes,5,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
}

func (x *UpdatePhoneRequest) Reset() {
	*x = UpdatePhoneRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceAddrbook_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePhoneRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePhoneRequest) ProtoMessage() {}

func (x *UpdatePhoneRequest) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceAddrbook_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePhoneRequest.ProtoReflect.Descriptor instead.
func (*UpdatePhoneRequest) Descriptor() ([]byte, []int) {
	return file_MServiceAddrbook_proto_rawDescGZIP(), []int{26}
}

func (x *UpdatePhoneRequest) GetMserviceId() int64 {
	if x != nil {
		return x.MserviceId
	}
	return 0
}

func (x *UpdatePhoneRequest) GetPartyId() int64 {
	if x != nil {
		return x.PartyId
	}
	return 0
}

func (x *UpdatePhoneRequest) GetPhoneType() int32 {
	if x != nil {
		return x.PhoneType
	}
	return 0
}

func (x *UpdatePhoneRequest) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *UpdatePhoneRequest) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

// response parameters for method update_phone
type UpdatePhoneResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// method result code
	ErrorCode int32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	// text error message
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// version of this record
	Version int32 `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *UpdatePhoneResponse) Reset() {
	*x = UpdatePhoneResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceAddrbook_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePhoneResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePhoneResponse) ProtoMessage() {}

func (x *UpdatePhoneResponse) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceAddrbook_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePhoneResponse.ProtoReflect.Descriptor instead.
func (*UpdatePhoneResponse) Descriptor() ([]byte, []int) {
	return file_MServiceAddrbook_proto_rawDescGZIP(), []int{27}
}

func (x *UpdatePhoneResponse) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *UpdatePhoneResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *UpdatePhoneResponse) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

// request parameters for method delete_phone
type DeletePhoneRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// mservice account identifier
	MserviceId int64 `protobuf:"varint,1,opt,name=mservice_id,json=mserviceId,proto3" json:"mservice_id,omitempty"`
	// party identifier
	PartyId int64 `protobuf:"varint,2,opt,name=party_id,json=partyId,proto3" json:"party_id,omitempty"`
	// type of phone record, int value of PhoneType
	PhoneType int32 `protobuf:"varint,3,opt,name=phone_type,json=phoneType,proto3" json:"phone_type,omitempty"`
	// version of this record
	Version int32 `protobuf:"varint,4,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *DeletePhoneRequest) Reset() {
	*x = DeletePhoneRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceAddrbook_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletePhoneRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePhoneRequest) ProtoMessage() {}

func (x *DeletePhoneRequest) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceAddrbook_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePhoneRequest.ProtoReflect.Descriptor instead.
func (*DeletePhoneRequest) Descriptor() ([]byte, []int) {
	return file_MServiceAddrbook_proto_rawDescGZIP(), []int{28}
}

func (x *DeletePhoneRequest) GetMserviceId() int64 {
	if x != nil {
		return x.MserviceId
	}
	return 0
}

func (x *DeletePhoneRequest) GetPartyId() int64 {
	if x != nil {
		return x.PartyId
	}
	return 0
}

func (x *DeletePhoneRequest) GetPhoneType() int32 {
	if x != nil {
		return x.PhoneType
	}
	return 0
}

func (x *DeletePhoneRequest) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

// response parameters for method delete_phone
type DeletePhoneResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// method result code
	ErrorCode int32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	// text error message
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// version of this record
	Version int32 `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *DeletePhoneResponse) Reset() {
	*x = DeletePhoneResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceAddrbook_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletePhoneResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePhoneResponse) ProtoMessage() {}

func (x *DeletePhoneResponse) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceAddrbook_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePhoneResponse.ProtoReflect.Descriptor instead.
func (*DeletePhoneResponse) Descriptor() ([]byte, []int) {
	return file_MServiceAddrbook_proto_rawDescGZIP(), []int{29}
}

func (x *DeletePhoneResponse) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *DeletePhoneResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *DeletePhoneResponse) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

// request parameters for method get_phone
type GetPhoneRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// mservice account identifier
	MserviceId int64 `protobuf:"varint,1,opt,name=mservice_id,json=mserviceId,proto3" json:"mservice_id,omitempty"`
	// party identifier
	PartyId int64 `protobuf:"varint,2,opt,name=party_id,json=partyId,proto3" json:"party_id,omitempty"`
	// type of phone record, int value of PhoneType
	PhoneType int32 `protobuf:"varint,3,opt,name=phone_type,json=phoneType,proto3" json:"phone_type,omitempty"`
}

func (x *GetPhoneRequest) Reset() {
	*x = GetPhoneRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceAddrbook_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPhoneRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPhoneRequest) ProtoMessage() {}

func (x *GetPhoneRequest) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceAddrbook_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPhoneRequest.ProtoReflect.Descriptor instead.
func (*GetPhoneRequest) Descriptor() ([]byte, []int) {
	return file_MServiceAddrbook_proto_rawDescGZIP(), []int{30}
}

func (x *GetPhoneRequest) GetMserviceId() int64 {
	if x != nil {
		return x.MserviceId
	}
	return 0
}

func (x *GetPhoneRequest) GetPartyId() int64 {
	if x != nil {
		return x.PartyId
	}
	return 0
}

func (x *GetPhoneRequest) GetPhoneType() int32 {
	if x != nil {
		return x.PhoneType
	}
	return 0
}

// response parameters for method get_phone
type GetPhoneResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// method result code
	ErrorCode int32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	// text error message
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// address book phone object
	Phone *Phone `protobuf:"bytes,3,opt,name=phone,proto3" json:"phone,omitempty"`
}

func (x *GetPhoneResponse) Reset() {
	*x = GetPhoneResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceAddrbook_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPhoneResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPhoneResponse) ProtoMessage() {}

func (x *GetPhoneResponse) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceAddrbook_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPhoneResponse.ProtoReflect.Descriptor instead.
func (*GetPhoneResponse) Descriptor() ([]byte, []int) {
	return file_MServiceAddrbook_proto_rawDescGZIP(), []int{31}
}

func (x *GetPhoneResponse) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *GetPhoneResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *GetPhoneResponse) GetPhone() *Phone {
	if x != nil {
		return x.Phone
	}
	return nil
}

// request parameters for method get_server_version
type GetServerVersionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// placeholder param to avoid empty message
	DummyParam int32 `protobuf:"varint,1,opt,name=dummy_param,json=dummyParam,proto3" json:"dummy_param,omitempty"`
}

func (x *GetServerVersionRequest) Reset() {
	*x = GetServerVersionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceAddrbook_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetServerVersionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServerVersionRequest) ProtoMessage() {}

func (x *GetServerVersionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceAddrbook_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServerVersionRequest.ProtoReflect.Descriptor instead.
func (*GetServerVersionRequest) Descriptor() ([]byte, []int) {
	return file_MServiceAddrbook_proto_rawDescGZIP(), []int{32}
}

func (x *GetServerVersionRequest) GetDummyParam() int32 {
	if x != nil {
		return x.DummyParam
	}
	return 0
}

// response parameters for method get_server_version
type GetServerVersionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// method result code
	ErrorCode int32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	// text error message
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// version level of server
	ServerVersion string `protobuf:"bytes,3,opt,name=server_version,json=serverVersion,proto3" json:"server_version,omitempty"`
	// server uptime in seconds
	ServerUptime int64 `protobuf:"varint,4,opt,name=server_uptime,json=serverUptime,proto3" json:"server_uptime,omitempty"`
}

func (x *GetServerVersionResponse) Reset() {
	*x = GetServerVersionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceAddrbook_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetServerVersionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServerVersionResponse) ProtoMessage() {}

func (x *GetServerVersionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceAddrbook_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServerVersionResponse.ProtoReflect.Descriptor instead.
func (*GetServerVersionResponse) Descriptor() ([]byte, []int) {
	return file_MServiceAddrbook_proto_rawDescGZIP(), []int{33}
}

func (x *GetServerVersionResponse) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *GetServerVersionResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *GetServerVersionResponse) GetServerVersion() string {
	if x != nil {
		return x.ServerVersion
	}
	return ""
}

func (x *GetServerVersionResponse) GetServerUptime() int64 {
	if x != nil {
		return x.ServerUptime
	}
	return 0
}

var File_MServiceAddrbook_proto protoreflect.FileDescriptor

var file_MServiceAddrbook_proto_rawDesc = []byte{
	0x0a, 0x16, 0x4d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x64, 0x64, 0x72, 0x62, 0x6f,
	0x6f, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61,
	0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x61, 0x64, 0x64, 0x72, 0x62, 0x6f, 0x6f, 0x6b, 0x1a, 0x12, 0x44, 0x6d, 0x6c, 0x45, 0x78, 0x74,
	0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe9, 0x03, 0x0a,
	0x05, 0x50, 0x61, 0x72, 0x74, 0x79, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x70, 0x61, 0x72, 0x74, 0x79, 0x49,
	0x64, 0x12, 0x27, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x64, 0x6d, 0x6c, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x29, 0x0a, 0x08, 0x6d, 0x6f,
	0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x64,
	0x6d, 0x6c, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x08, 0x6d, 0x6f, 0x64,
	0x69, 0x66, 0x69, 0x65, 0x64, 0x12, 0x27, 0x0a, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x64, 0x6d, 0x6c, 0x2e, 0x44, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x74,
	0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x70, 0x61,
	0x72, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x70, 0x61, 0x72, 0x74, 0x79,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x70, 0x61, 0x72, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x22, 0xf6, 0x04, 0x0a, 0x0c, 0x50, 0x61, 0x72,
	0x74, 0x79, 0x57, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x72,
	0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x70, 0x61, 0x72,
	0x74, 0x79, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x64, 0x6d, 0x6c, 0x2e, 0x44, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x29, 0x0a,
	0x08, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x64, 0x6d, 0x6c, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x08,
	0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x12, 0x27, 0x0a, 0x07, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x64, 0x6d, 0x6c, 0x2e,
	0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70,
	0x61, 0x72, 0x74, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x70, 0x61, 0x72, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x70, 0x61,
	0x72, 0x74, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x61, 0x72, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1f, 0x0a, 0x0b, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x45, 0x0a, 0x09, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x10, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27,
	0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x61, 0x64, 0x64, 0x72, 0x62, 0x6f, 0x6f, 0x6b, 0x2e,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x65, 0x73, 0x12, 0x3d, 0x0a, 0x06, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x73, 0x18, 0x11, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63,
	0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x61, 0x64, 0x64, 0x72, 0x62,
	0x6f, 0x6f, 0x6b, 0x2e, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x52, 0x06, 0x70, 0x68, 0x6f, 0x6e, 0x65,
	0x73, 0x22, 0xf2, 0x03, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x19, 0x0a,
	0x08, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x70, 0x61, 0x72, 0x74, 0x79, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x27, 0x0a, 0x07, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x64,
	0x6d, 0x6c, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x07, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x12, 0x29, 0x0a, 0x08, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x64, 0x6d, 0x6c, 0x2e, 0x44, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x08, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x12,
	0x27, 0x0a, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x64, 0x6d, 0x6c, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52,
	0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x64,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x2a, 0x0a, 0x11, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a,
	0x0b, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x31, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x31, 0x12, 0x1b, 0x0a, 0x09, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x32, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x32, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x6f, 0x73, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6f, 0x73, 0x74, 0x61, 0x6c, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x72, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x22, 0xe3, 0x02, 0x0a, 0x05, 0x50, 0x68, 0x6f, 0x6e, 0x65,
	0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x70, 0x61, 0x72, 0x74, 0x79, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70,
	0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x27, 0x0a, 0x07, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x64, 0x6d,
	0x6c, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x12, 0x29, 0x0a, 0x08, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x64, 0x6d, 0x6c, 0x2e, 0x44, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x52, 0x08, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x12, 0x27,
	0x0a, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x64, 0x6d, 0x6c, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x07,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x64, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x26, 0x0a, 0x0f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x68, 0x6f, 0x6e, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x68, 0x6f,
	0x6e, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0xfd, 0x01, 0x0a,
	0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x70, 0x61, 0x72, 0x74, 0x79, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x22, 0x8e, 0x01, 0x0a,
	0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x70, 0x61, 0x72, 0x74, 0x79, 0x49, 0x64, 0x22, 0xb2, 0x02,
	0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x74, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x70, 0x61, 0x72, 0x74, 0x79, 0x49, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61,
	0x72, 0x74, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x70, 0x61, 0x72, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x61, 0x73,
	0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61,
	0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x69, 0x64,
	0x64, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69, 0x72, 0x73, 0x74,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x72,
	0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x22, 0x73, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x74,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x6a, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x50, 0x61, 0x72, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a,
	0x0b, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x19,
	0x0a, 0x08, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x70, 0x61, 0x72, 0x74, 0x79, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x22, 0x73, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x61, 0x72,
	0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x4d, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x50,
	0x61, 0x72, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6d,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08,
	0x70, 0x61, 0x72, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x70, 0x61, 0x72, 0x74, 0x79, 0x49, 0x64, 0x22, 0x93, 0x01, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x50,
	0x61, 0x72, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x3b, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x25, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x61, 0x64, 0x64, 0x72, 0x62, 0x6f, 0x6f, 0x6b,
	0x2e, 0x50, 0x61, 0x72, 0x74, 0x79, 0x52, 0x05, 0x70, 0x61, 0x72, 0x74, 0x79, 0x22, 0x34, 0x0a,
	0x11, 0x47, 0x65, 0x74, 0x50, 0x61, 0x72, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x49, 0x64, 0x22, 0x99, 0x01, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x50, 0x61, 0x72, 0x74, 0x69,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3f,
	0x0a, 0x07, 0x70, 0x61, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x25, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x61, 0x64, 0x64, 0x72, 0x62, 0x6f, 0x6f, 0x6b,
	0x2e, 0x50, 0x61, 0x72, 0x74, 0x79, 0x52, 0x07, 0x70, 0x61, 0x72, 0x74, 0x69, 0x65, 0x73, 0x22,
	0x54, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x50, 0x61, 0x72, 0x74, 0x79, 0x57, 0x72, 0x61, 0x70, 0x70,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61,
	0x72, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x70, 0x61,
	0x72, 0x74, 0x79, 0x49, 0x64, 0x22, 0xb0, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x50, 0x61, 0x72,
	0x74, 0x79, 0x57, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x51, 0x0a, 0x0d, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f, 0x77,
	0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x6f,
	0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x61, 0x64, 0x64, 0x72, 0x62, 0x6f, 0x6f, 0x6b, 0x2e, 0x50, 0x61,
	0x72, 0x74, 0x79, 0x57, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x52, 0x0c, 0x70, 0x61, 0x72, 0x74,
	0x79, 0x57, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x22, 0x9d, 0x02, 0x0a, 0x14, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x70, 0x61, 0x72, 0x74, 0x79, 0x49, 0x64, 0x12, 0x21, 0x0a,
	0x0c, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0b, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x1b, 0x0a, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x31, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x31, 0x12, 0x1b, 0x0a,
	0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x32, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x32, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69,
	0x74, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x6f, 0x73, 0x74, 0x61, 0x6c, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6f, 0x73, 0x74, 0x61,
	0x6c, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79,
	0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x72, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x75, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22,
	0xb7, 0x02, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x72,
	0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x70, 0x61, 0x72,
	0x74, 0x79, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x31, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x31, 0x12, 0x1b,
	0x0a, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x32, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x32, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x69, 0x74, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x6f, 0x73, 0x74, 0x61, 0x6c, 0x5f,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6f, 0x73, 0x74,
	0x61, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72,
	0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x72, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x75, 0x0a, 0x15, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x22, 0x8f, 0x01, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61,
	0x72, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x70, 0x61,
	0x72, 0x74, 0x79, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x22, 0x75, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x72, 0x0a, 0x11, 0x47, 0x65, 0x74,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f,
	0x0a, 0x0b, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12,
	0x19, 0x0a, 0x08, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x70, 0x61, 0x72, 0x74, 0x79, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0b, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x22, 0x9b, 0x01,
	0x0a, 0x12, 0x47, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x41, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x6f, 0x72, 0x67, 0x2e,
	0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x61, 0x64, 0x64, 0x72, 0x62, 0x6f, 0x6f, 0x6b, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x92, 0x01, 0x0a, 0x12,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x70, 0x61, 0x72, 0x74, 0x79, 0x49, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a,
	0x0c, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x22, 0x73, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0xac, 0x01, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x50, 0x68, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b,
	0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x19, 0x0a,
	0x08, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x70, 0x61, 0x72, 0x74, 0x79, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x68, 0x6f, 0x6e,
	0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x70, 0x68,
	0x6f, 0x6e, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x22, 0x73, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x68,
	0x6f, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x89, 0x01, 0x0a, 0x12, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49,
	0x64, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x70, 0x61, 0x72, 0x74, 0x79, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a,
	0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x73, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50,
	0x68, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x6c, 0x0a, 0x0f, 0x47, 0x65,
	0x74, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a,
	0x0b, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x19,
	0x0a, 0x08, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x70, 0x61, 0x72, 0x74, 0x79, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x68, 0x6f,
	0x6e, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x70,
	0x68, 0x6f, 0x6e, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0x93, 0x01, 0x0a, 0x10, 0x47, 0x65, 0x74,
	0x50, 0x68, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x3b, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x25, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e,
	0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x61, 0x64, 0x64, 0x72, 0x62, 0x6f, 0x6f,
	0x6b, 0x2e, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x22, 0x3a,
	0x0a, 0x17, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x75, 0x6d,
	0x6d, 0x79, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x64, 0x75, 0x6d, 0x6d, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x22, 0xaa, 0x01, 0x0a, 0x18, 0x47,
	0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x75, 0x70, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x55, 0x70, 0x74, 0x69, 0x6d, 0x65, 0x2a, 0x37, 0x0a, 0x09, 0x50, 0x61, 0x72, 0x74, 0x79,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x0c, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x50,
	0x61, 0x72, 0x74, 0x79, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e,
	0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x10, 0x02,
	0x2a, 0x39, 0x0a, 0x0b, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x12, 0x0a, 0x0e, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x48, 0x6f, 0x6d, 0x65, 0x10, 0x01, 0x12, 0x0c, 0x0a,
	0x08, 0x53, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x10, 0x02, 0x2a, 0x4a, 0x0a, 0x09, 0x50,
	0x68, 0x6f, 0x6e, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x0c, 0x55, 0x6e, 0x6b, 0x6e,
	0x6f, 0x77, 0x6e, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x48, 0x6f,
	0x6d, 0x65, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x57, 0x6f, 0x72,
	0x6b, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x65, 0x6c, 0x6c,
	0x50, 0x68, 0x6f, 0x6e, 0x65, 0x10, 0x03, 0x32, 0xc2, 0x0e, 0x0a, 0x10, 0x4d, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x41, 0x64, 0x64, 0x72, 0x62, 0x6f, 0x6f, 0x6b, 0x12, 0x77, 0x0a, 0x0c,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x79, 0x12, 0x32, 0x2e, 0x6f,
	0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x61, 0x64, 0x64, 0x72, 0x62, 0x6f, 0x6f, 0x6b, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x33, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e,
	0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x61, 0x64, 0x64, 0x72, 0x62, 0x6f, 0x6f,
	0x6b, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x74, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x77, 0x0a, 0x0c, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f,
	0x70, 0x61, 0x72, 0x74, 0x79, 0x12, 0x32, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65,
	0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x61, 0x64,
	0x64, 0x72, 0x62, 0x6f, 0x6f, 0x6b, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72,
	0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x6f, 0x72, 0x67, 0x2e,
	0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x61, 0x64, 0x64, 0x72, 0x62, 0x6f, 0x6f, 0x6b, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x50, 0x61, 0x72, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x77,
	0x0a, 0x0c, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x79, 0x12, 0x32,
	0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x61, 0x64, 0x64, 0x72, 0x62, 0x6f, 0x6f, 0x6b, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x61, 0x72, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x33, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63,
	0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x61, 0x64, 0x64, 0x72, 0x62,
	0x6f, 0x6f, 0x6b, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x61, 0x72, 0x74, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6e, 0x0a, 0x09, 0x67, 0x65, 0x74, 0x5f, 0x70,
	0x61, 0x72, 0x74, 0x79, 0x12, 0x2f, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72,
	0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x61, 0x64, 0x64,
	0x72, 0x62, 0x6f, 0x6f, 0x6b, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x72, 0x74, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65,
	0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x61, 0x64,
	0x64, 0x72, 0x62, 0x6f, 0x6f, 0x6b, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x72, 0x74, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x74, 0x0a, 0x0b, 0x67, 0x65, 0x74, 0x5f, 0x70,
	0x61, 0x72, 0x74, 0x69, 0x65, 0x73, 0x12, 0x31, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74,
	0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x61,
	0x64, 0x64, 0x72, 0x62, 0x6f, 0x6f, 0x6b, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x72, 0x74, 0x69,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x6f, 0x72, 0x67, 0x2e,
	0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x61, 0x64, 0x64, 0x72, 0x62, 0x6f, 0x6f, 0x6b, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61,
	0x72, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x84, 0x01,
	0x0a, 0x11, 0x67, 0x65, 0x74, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f, 0x77, 0x72, 0x61, 0x70,
	0x70, 0x65, 0x72, 0x12, 0x36, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61,
	0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x61, 0x64, 0x64, 0x72,
	0x62, 0x6f, 0x6f, 0x6b, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x72, 0x74, 0x79, 0x57, 0x72, 0x61,
	0x70, 0x70, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e, 0x6f, 0x72,
	0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x61, 0x64, 0x64, 0x72, 0x62, 0x6f, 0x6f, 0x6b, 0x2e, 0x47, 0x65, 0x74,
	0x50, 0x61, 0x72, 0x74, 0x79, 0x57, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7d, 0x0a, 0x0e, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x34, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74,
	0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x61,
	0x64, 0x64, 0x72, 0x62, 0x6f, 0x6f, 0x6b, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x6f,
	0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x61, 0x64, 0x64, 0x72, 0x62, 0x6f, 0x6f, 0x6b, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x7d, 0x0a, 0x0e, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x34, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65,
	0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x61, 0x64,
	0x64, 0x72, 0x62, 0x6f, 0x6f, 0x6b, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x6f, 0x72,
	0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x61, 0x64, 0x64, 0x72, 0x62, 0x6f, 0x6f, 0x6b, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x7d, 0x0a, 0x0e, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x34, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72,
	0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x61, 0x64, 0x64,
	0x72, 0x62, 0x6f, 0x6f, 0x6b, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x6f, 0x72, 0x67,
	0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x61, 0x64, 0x64, 0x72, 0x62, 0x6f, 0x6f, 0x6b, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x74, 0x0a, 0x0b, 0x67, 0x65, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x31, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e,
	0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x61, 0x64, 0x64, 0x72, 0x62, 0x6f, 0x6f,
	0x6b, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61,
	0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x61, 0x64, 0x64, 0x72,
	0x62, 0x6f, 0x6f, 0x6b, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x77, 0x0a, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x5f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x32, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61,
	0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x61, 0x64, 0x64, 0x72, 0x62, 0x6f, 0x6f, 0x6b, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50,
	0x68, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x6f, 0x72,
	0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x61, 0x64, 0x64, 0x72, 0x62, 0x6f, 0x6f, 0x6b, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x77, 0x0a, 0x0c, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x70, 0x68, 0x6f, 0x6e, 0x65,
	0x12, 0x32, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e,
	0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x61, 0x64, 0x64, 0x72, 0x62, 0x6f, 0x6f,
	0x6b, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72,
	0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x61, 0x64, 0x64,
	0x72, 0x62, 0x6f, 0x6f, 0x6b, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x68, 0x6f, 0x6e,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x77, 0x0a, 0x0c, 0x64, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x5f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x32, 0x2e, 0x6f, 0x72, 0x67, 0x2e,
	0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x61, 0x64, 0x64, 0x72, 0x62, 0x6f, 0x6f, 0x6b, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e,
	0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x61, 0x64, 0x64, 0x72, 0x62, 0x6f, 0x6f, 0x6b, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x6e, 0x0a, 0x09, 0x67, 0x65, 0x74, 0x5f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12,
	0x2f, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x61, 0x64, 0x64, 0x72, 0x62, 0x6f, 0x6f, 0x6b,
	0x2e, 0x47, 0x65, 0x74, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x30, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e,
	0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x61, 0x64, 0x64, 0x72, 0x62, 0x6f, 0x6f,
	0x6b, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x87, 0x01, 0x0a, 0x12, 0x67, 0x65, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2e,
	0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x61, 0x64, 0x64, 0x72, 0x62, 0x6f, 0x6f, 0x6b, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x38, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63,
	0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x61, 0x64, 0x64, 0x72, 0x62,
	0x6f, 0x6f, 0x6b, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x46, 0x5a, 0x31,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x61, 0x74, 0x65, 0x72,
	0x61, 0x63, 0x65, 0x2f, 0x61, 0x64, 0x64, 0x72, 0x62, 0x6f, 0x6f, 0x6b, 0x2f, 0x70, 0x6b, 0x67,
	0x2f, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x61, 0x64, 0x64, 0x72, 0x62, 0x6f, 0x6f,
	0x6b, 0xaa, 0x02, 0x10, 0x4d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x64, 0x64, 0x72,
	0x62, 0x6f, 0x6f, 0x6b, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_MServiceAddrbook_proto_rawDescOnce sync.Once
	file_MServiceAddrbook_proto_rawDescData = file_MServiceAddrbook_proto_rawDesc
)

func file_MServiceAddrbook_proto_rawDescGZIP() []byte {
	file_MServiceAddrbook_proto_rawDescOnce.Do(func() {
		file_MServiceAddrbook_proto_rawDescData = protoimpl.X.CompressGZIP(file_MServiceAddrbook_proto_rawDescData)
	})
	return file_MServiceAddrbook_proto_rawDescData
}

var file_MServiceAddrbook_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_MServiceAddrbook_proto_msgTypes = make([]protoimpl.MessageInfo, 34)
var file_MServiceAddrbook_proto_goTypes = []interface{}{
	(PartyType)(0),                   // 0: org.gaterace.mservice.addrbook.PartyType
	(AddressType)(0),                 // 1: org.gaterace.mservice.addrbook.AddressType
	(PhoneType)(0),                   // 2: org.gaterace.mservice.addrbook.PhoneType
	(*Party)(nil),                    // 3: org.gaterace.mservice.addrbook.Party
	(*PartyWrapper)(nil),             // 4: org.gaterace.mservice.addrbook.PartyWrapper
	(*Address)(nil),                  // 5: org.gaterace.mservice.addrbook.Address
	(*Phone)(nil),                    // 6: org.gaterace.mservice.addrbook.Phone
	(*CreatePartyRequest)(nil),       // 7: org.gaterace.mservice.addrbook.CreatePartyRequest
	(*CreatePartyResponse)(nil),      // 8: org.gaterace.mservice.addrbook.CreatePartyResponse
	(*UpdatePartyRequest)(nil),       // 9: org.gaterace.mservice.addrbook.UpdatePartyRequest
	(*UpdatePartyResponse)(nil),      // 10: org.gaterace.mservice.addrbook.UpdatePartyResponse
	(*DeletePartyRequest)(nil),       // 11: org.gaterace.mservice.addrbook.DeletePartyRequest
	(*DeletePartyResponse)(nil),      // 12: org.gaterace.mservice.addrbook.DeletePartyResponse
	(*GetPartyRequest)(nil),          // 13: org.gaterace.mservice.addrbook.GetPartyRequest
	(*GetPartyResponse)(nil),         // 14: org.gaterace.mservice.addrbook.GetPartyResponse
	(*GetPartiesRequest)(nil),        // 15: org.gaterace.mservice.addrbook.GetPartiesRequest
	(*GetPartiesResponse)(nil),       // 16: org.gaterace.mservice.addrbook.GetPartiesResponse
	(*GetPartyWrapperRequest)(nil),   // 17: org.gaterace.mservice.addrbook.GetPartyWrapperRequest
	(*GetPartyWrapperResponse)(nil),  // 18: org.gaterace.mservice.addrbook.GetPartyWrapperResponse
	(*CreateAddressRequest)(nil),     // 19: org.gaterace.mservice.addrbook.CreateAddressRequest
	(*CreateAddressResponse)(nil),    // 20: org.gaterace.mservice.addrbook.CreateAddressResponse
	(*UpdateAddressRequest)(nil),     // 21: org.gaterace.mservice.addrbook.UpdateAddressRequest
	(*UpdateAddressResponse)(nil),    // 22: org.gaterace.mservice.addrbook.UpdateAddressResponse
	(*DeleteAddressRequest)(nil),     // 23: org.gaterace.mservice.addrbook.DeleteAddressRequest
	(*DeleteAddressResponse)(nil),    // 24: org.gaterace.mservice.addrbook.DeleteAddressResponse
	(*GetAddressRequest)(nil),        // 25: org.gaterace.mservice.addrbook.GetAddressRequest
	(*GetAddressResponse)(nil),       // 26: org.gaterace.mservice.addrbook.GetAddressResponse
	(*CreatePhoneRequest)(nil),       // 27: org.gaterace.mservice.addrbook.CreatePhoneRequest
	(*CreatePhoneResponse)(nil),      // 28: org.gaterace.mservice.addrbook.CreatePhoneResponse
	(*UpdatePhoneRequest)(nil),       // 29: org.gaterace.mservice.addrbook.UpdatePhoneRequest
	(*UpdatePhoneResponse)(nil),      // 30: org.gaterace.mservice.addrbook.UpdatePhoneResponse
	(*DeletePhoneRequest)(nil),       // 31: org.gaterace.mservice.addrbook.DeletePhoneRequest
	(*DeletePhoneResponse)(nil),      // 32: org.gaterace.mservice.addrbook.DeletePhoneResponse
	(*GetPhoneRequest)(nil),          // 33: org.gaterace.mservice.addrbook.GetPhoneRequest
	(*GetPhoneResponse)(nil),         // 34: org.gaterace.mservice.addrbook.GetPhoneResponse
	(*GetServerVersionRequest)(nil),  // 35: org.gaterace.mservice.addrbook.GetServerVersionRequest
	(*GetServerVersionResponse)(nil), // 36: org.gaterace.mservice.addrbook.GetServerVersionResponse
	(*dml.DateTime)(nil),             // 37: dml.DateTime
}
var file_MServiceAddrbook_proto_depIdxs = []int32{
	37, // 0: org.gaterace.mservice.addrbook.Party.created:type_name -> dml.DateTime
	37, // 1: org.gaterace.mservice.addrbook.Party.modified:type_name -> dml.DateTime
	37, // 2: org.gaterace.mservice.addrbook.Party.deleted:type_name -> dml.DateTime
	37, // 3: org.gaterace.mservice.addrbook.PartyWrapper.created:type_name -> dml.DateTime
	37, // 4: org.gaterace.mservice.addrbook.PartyWrapper.modified:type_name -> dml.DateTime
	37, // 5: org.gaterace.mservice.addrbook.PartyWrapper.deleted:type_name -> dml.DateTime
	5,  // 6: org.gaterace.mservice.addrbook.PartyWrapper.addresses:type_name -> org.gaterace.mservice.addrbook.Address
	6,  // 7: org.gaterace.mservice.addrbook.PartyWrapper.phones:type_name -> org.gaterace.mservice.addrbook.Phone
	37, // 8: org.gaterace.mservice.addrbook.Address.created:type_name -> dml.DateTime
	37, // 9: org.gaterace.mservice.addrbook.Address.modified:type_name -> dml.DateTime
	37, // 10: org.gaterace.mservice.addrbook.Address.deleted:type_name -> dml.DateTime
	37, // 11: org.gaterace.mservice.addrbook.Phone.created:type_name -> dml.DateTime
	37, // 12: org.gaterace.mservice.addrbook.Phone.modified:type_name -> dml.DateTime
	37, // 13: org.gaterace.mservice.addrbook.Phone.deleted:type_name -> dml.DateTime
	3,  // 14: org.gaterace.mservice.addrbook.GetPartyResponse.party:type_name -> org.gaterace.mservice.addrbook.Party
	3,  // 15: org.gaterace.mservice.addrbook.GetPartiesResponse.parties:type_name -> org.gaterace.mservice.addrbook.Party
	4,  // 16: org.gaterace.mservice.addrbook.GetPartyWrapperResponse.party_wrapper:type_name -> org.gaterace.mservice.addrbook.PartyWrapper
	5,  // 17: org.gaterace.mservice.addrbook.GetAddressResponse.address:type_name -> org.gaterace.mservice.addrbook.Address
	6,  // 18: org.gaterace.mservice.addrbook.GetPhoneResponse.phone:type_name -> org.gaterace.mservice.addrbook.Phone
	7,  // 19: org.gaterace.mservice.addrbook.MServiceAddrbook.create_party:input_type -> org.gaterace.mservice.addrbook.CreatePartyRequest
	9,  // 20: org.gaterace.mservice.addrbook.MServiceAddrbook.update_party:input_type -> org.gaterace.mservice.addrbook.UpdatePartyRequest
	11, // 21: org.gaterace.mservice.addrbook.MServiceAddrbook.delete_party:input_type -> org.gaterace.mservice.addrbook.DeletePartyRequest
	13, // 22: org.gaterace.mservice.addrbook.MServiceAddrbook.get_party:input_type -> org.gaterace.mservice.addrbook.GetPartyRequest
	15, // 23: org.gaterace.mservice.addrbook.MServiceAddrbook.get_parties:input_type -> org.gaterace.mservice.addrbook.GetPartiesRequest
	17, // 24: org.gaterace.mservice.addrbook.MServiceAddrbook.get_party_wrapper:input_type -> org.gaterace.mservice.addrbook.GetPartyWrapperRequest
	19, // 25: org.gaterace.mservice.addrbook.MServiceAddrbook.create_address:input_type -> org.gaterace.mservice.addrbook.CreateAddressRequest
	21, // 26: org.gaterace.mservice.addrbook.MServiceAddrbook.update_address:input_type -> org.gaterace.mservice.addrbook.UpdateAddressRequest
	23, // 27: org.gaterace.mservice.addrbook.MServiceAddrbook.delete_address:input_type -> org.gaterace.mservice.addrbook.DeleteAddressRequest
	25, // 28: org.gaterace.mservice.addrbook.MServiceAddrbook.get_address:input_type -> org.gaterace.mservice.addrbook.GetAddressRequest
	27, // 29: org.gaterace.mservice.addrbook.MServiceAddrbook.create_phone:input_type -> org.gaterace.mservice.addrbook.CreatePhoneRequest
	29, // 30: org.gaterace.mservice.addrbook.MServiceAddrbook.update_phone:input_type -> org.gaterace.mservice.addrbook.UpdatePhoneRequest
	31, // 31: org.gaterace.mservice.addrbook.MServiceAddrbook.delete_phone:input_type -> org.gaterace.mservice.addrbook.DeletePhoneRequest
	33, // 32: org.gaterace.mservice.addrbook.MServiceAddrbook.get_phone:input_type -> org.gaterace.mservice.addrbook.GetPhoneRequest
	35, // 33: org.gaterace.mservice.addrbook.MServiceAddrbook.get_server_version:input_type -> org.gaterace.mservice.addrbook.GetServerVersionRequest
	8,  // 34: org.gaterace.mservice.addrbook.MServiceAddrbook.create_party:output_type -> org.gaterace.mservice.addrbook.CreatePartyResponse
	10, // 35: org.gaterace.mservice.addrbook.MServiceAddrbook.update_party:output_type -> org.gaterace.mservice.addrbook.UpdatePartyResponse
	12, // 36: org.gaterace.mservice.addrbook.MServiceAddrbook.delete_party:output_type -> org.gaterace.mservice.addrbook.DeletePartyResponse
	14, // 37: org.gaterace.mservice.addrbook.MServiceAddrbook.get_party:output_type -> org.gaterace.mservice.addrbook.GetPartyResponse
	16, // 38: org.gaterace.mservice.addrbook.MServiceAddrbook.get_parties:output_type -> org.gaterace.mservice.addrbook.GetPartiesResponse
	18, // 39: org.gaterace.mservice.addrbook.MServiceAddrbook.get_party_wrapper:output_type -> org.gaterace.mservice.addrbook.GetPartyWrapperResponse
	20, // 40: org.gaterace.mservice.addrbook.MServiceAddrbook.create_address:output_type -> org.gaterace.mservice.addrbook.CreateAddressResponse
	22, // 41: org.gaterace.mservice.addrbook.MServiceAddrbook.update_address:output_type -> org.gaterace.mservice.addrbook.UpdateAddressResponse
	24, // 42: org.gaterace.mservice.addrbook.MServiceAddrbook.delete_address:output_type -> org.gaterace.mservice.addrbook.DeleteAddressResponse
	26, // 43: org.gaterace.mservice.addrbook.MServiceAddrbook.get_address:output_type -> org.gaterace.mservice.addrbook.GetAddressResponse
	28, // 44: org.gaterace.mservice.addrbook.MServiceAddrbook.create_phone:output_type -> org.gaterace.mservice.addrbook.CreatePhoneResponse
	30, // 45: org.gaterace.mservice.addrbook.MServiceAddrbook.update_phone:output_type -> org.gaterace.mservice.addrbook.UpdatePhoneResponse
	32, // 46: org.gaterace.mservice.addrbook.MServiceAddrbook.delete_phone:output_type -> org.gaterace.mservice.addrbook.DeletePhoneResponse
	34, // 47: org.gaterace.mservice.addrbook.MServiceAddrbook.get_phone:output_type -> org.gaterace.mservice.addrbook.GetPhoneResponse
	36, // 48: org.gaterace.mservice.addrbook.MServiceAddrbook.get_server_version:output_type -> org.gaterace.mservice.addrbook.GetServerVersionResponse
	34, // [34:49] is the sub-list for method output_type
	19, // [19:34] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_MServiceAddrbook_proto_init() }
func file_MServiceAddrbook_proto_init() {
	if File_MServiceAddrbook_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_MServiceAddrbook_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Party); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceAddrbook_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PartyWrapper); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceAddrbook_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Address); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceAddrbook_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Phone); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceAddrbook_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePartyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceAddrbook_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePartyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceAddrbook_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePartyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceAddrbook_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePartyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceAddrbook_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeletePartyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceAddrbook_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeletePartyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceAddrbook_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPartyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceAddrbook_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPartyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceAddrbook_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPartiesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceAddrbook_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPartiesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceAddrbook_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPartyWrapperRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceAddrbook_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPartyWrapperResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceAddrbook_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAddressRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceAddrbook_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAddressResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceAddrbook_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAddressRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceAddrbook_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAddressResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceAddrbook_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAddressRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceAddrbook_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAddressResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceAddrbook_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAddressRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceAddrbook_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAddressResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceAddrbook_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePhoneRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceAddrbook_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePhoneResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceAddrbook_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePhoneRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceAddrbook_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePhoneResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceAddrbook_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeletePhoneRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceAddrbook_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeletePhoneResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceAddrbook_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPhoneRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceAddrbook_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPhoneResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceAddrbook_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetServerVersionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceAddrbook_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetServerVersionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_MServiceAddrbook_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   34,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_MServiceAddrbook_proto_goTypes,
		DependencyIndexes: file_MServiceAddrbook_proto_depIdxs,
		EnumInfos:         file_MServiceAddrbook_proto_enumTypes,
		MessageInfos:      file_MServiceAddrbook_proto_msgTypes,
	}.Build()
	File_MServiceAddrbook_proto = out.File
	file_MServiceAddrbook_proto_rawDesc = nil
	file_MServiceAddrbook_proto_goTypes = nil
	file_MServiceAddrbook_proto_depIdxs = nil
}
